#!/bin/csh
#
#  Copyright 2013, by the California Institute of Technology.  ALL RIGHTS
#  RESERVED. United States Government Sponsorship acknowledged. Any commercial
#  use must be negotiated with the Office of Technology Transfer at the
#  California Institute of Technology.
#
# $Id$
# DO NOT EDIT THE LINE ABOVE - IT IS AUTOMATICALLY GENERATED BY CM

#
# This is the C-shell wrapper to monitor the Perl processes started by the modis_level2_downloader.pl script.  If the task is taking too long, a sigevent will be raised.
# This script assumes that every time a downloader task is ran, a text file that starts with "obpg_download_process_" is created
# in $HOME/scratch/modis_level2_download_processes directory.  The Perl script modis_level2_tasks_tracker.pl will crawl the directory given in
# input_directory and for each file found will compare the last modified time with the value in threshold_in_minutes.
# If the last modified time is older than the value, a sigevent will be raised.   For a batch size of 40, it may take between 20 minutes to an hour.  It may be best to
# set the value for threshold_in_minutes to be 120 minutes (or 2 hours) as the maximum amount of time a downloader should take. 

# Set the environments.

source /app/config/download_task_tracker_config

# Get the input.

if ($# != 2) then
    echo "startup_modis_level2_tasks_tracker:ERROR, You must specify exactly 2 arguments: input_directory threshold_in_minutes"
    echo "Usage:"
    echo "    source startup_modis_level2_tasks_tracker.csh $HOME/scratch/modis_level2_download_processes 120"
    echo "    source startup_modis_level2_tasks_tracker.csh $HOME/scratch/modis_level2_download_processes 5"
    exit
endif

#exit

# Arguments:
#
#  1 = input_directory
#  2 = threshold_in_minutes (How old should the job be before we consider the job is hung so the operator will know to take action.)

set input_directory      = $1
set threshold_in_minutes = $2

# Create the logs directory and file if it does not exist yet.

set logging_dir = `printenv | grep TASKS_TRACKER_LOGGING | awk -F= '{print $2}'`
if (! -e $logging_dir) then
    mkdir $logging_dir
endif

set today_date = `date '+%m_%d_%y'`

set base = `basename $input_directory`
set filename = ($base:as/_/ /)
set processing_type = "$filename[1]_$filename[2]"

set tasks_log_name = "$logging_dir/download_tasks_tracker_{$processing_type}_{$today_date}.log"
touch $tasks_log_name

perl $GHRSST_PERL_LIB_DIRECTORY/modis_level2_download_tasks_tracker.pl -input_directory=$input_directory -threshold_in_minutes=$threshold_in_minutes >> $tasks_log_name
exit
