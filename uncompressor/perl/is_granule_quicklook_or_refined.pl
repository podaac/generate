#!/usr/local/bin/perl

#  Copyright 2012, by the California Institute of Technology.  ALL RIGHTS
#  RESERVED. United States Government Sponsorship acknowledged. Any commercial
#  use must be negotiated with the Office of Technology Transfer at the
#  California Institute of Technology.
#
# $Id$
# DO NOT EDIT THE LINE ABOVE - IT IS AUTOMATICALLY GENERATED BY CM

# Function will call an IDL program to read the global attribute of an uncompressed HDF file to check to see if it is Day, Night, or Mixed.
#------------------------------------------------------------------------------------------------

sub is_granule_quicklook_or_refined {

    # Returned status.  Value of 0 means ok, 1 means bad.

    my $o_quicklook_or_refined_flag = 'UNDEFINED';  # Assume UNDEFINED as default.  This gives the client a chance to handle any errors.

    # Get input.

    my $i_sst_filename = $_[0]; 

    my $idl_argument_strings = "-args \"$i_sst_filename\" ";

    my @args = ("/usr/local/bin/idl");

    if ($GHRSST_IDL_LIB_DIRECTORY == '') {
        $GHRSST_IDL_LIB_DIRECTORY = $ENV{GHRSST_IDL_LIB_DIRECTORY};
    }

    # Check to see if the name contains ".nc" to use the NetCDF version of the program to determine if the file is quicklook or refined.
    # We can also check the environment variable GHRSST_PROCESSING_NETCDF_FILE.
    if ((index($i_sst_filename,".nc") >= 0)  || ($ENV{GHRSST_PROCESSING_NETCDF_FILE} eq "true"))   {
        $rt_flag = "-quiet -rt=$GHRSST_IDL_LIB_DIRECTORY/is_netcdf_granule_quicklook_or_refined.sav";
    } else {
        $rt_flag = "-quiet -rt=$GHRSST_IDL_LIB_DIRECTORY/is_granule_quicklook_or_refined.sav";
    }
    $call_system_command_str = "$args[0] $rt_flag $idl_argument_strings";

#print "i_sst_filename [$i_sst_filename]\n";
#exit(0);

#print "call_system_command_str [$call_system_command_str]\n";

    my @results_lines = `$call_system_command_str`;
    foreach my $line (@results_lines ) {
        chomp($line);
        my @splitted_tokens = split(' ',$line);
        my $num_tokens = @splitted_tokens;
        if ($num_tokens == 2) {
            if ($splitted_tokens[0] == 'QUICKLOOK_OR_REFINED') {
                $o_quicklook_or_refined_flag = $splitted_tokens[1];  # The value we are looking for is the 2nd token.
            }
#print "splitted_tokens[1] [" . $o_quicklook_or_refined_flag . "]\n";
        }
    }

    #
    # Check for errors.
    #

    if ($? == -1) {
            print "is_granule_quicklook_or_refined: system [$call_system_command_str] failed to execute: $?\n";
            $o_status = 1;
    } elsif ($? == 256){
            print "is_granule_quicklook_or_refined: Cannot find file in system [$call_system_command_str].\n";
            $o_status = 1;
    } elsif ($? == 0){
#            print "is_granule_quicklook_or_refined: system $args[0] < $args[1] executed with: $?\n";
#            print "is_granule_quicklook_or_refined: Everything is OK.\n";
            $o_status = 0;
    } else {
            print "is_granule_quicklook_or_refined: system [$call_system_command_str] executed with: $?\n";
            $o_status = 1;
    }
    return($o_quicklook_or_refined_flag);
}
